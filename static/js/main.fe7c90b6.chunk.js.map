{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","Shared/AxiosQuery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","term","handleChange","e","setState","target","value","hendeleSubmit","preventDefault","props","onSubmit","this","className","type","name","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","newModal","openModal","largeImageURL","console","log","onClick","alt","src","webformatURL","ImageGallery","data","map","id","FetchDataWithQuery","query","page","APIkey","axios","get","then","response","hits","propTypes","PropTypes","string","isRequired","number","Button","handleClick","Loaders","color","height","width","timeout","Modal","modal","code","nodeName","modalClose","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","App","loading","error","hendleSearch","queryOn","prevState","fetchData","AxiosQuery","length","document","documentElement","scrollTop","clientHeight","scrollTo","top","behavior","catch","finally","prevProps","ReactDOM","render","StrictMode","getElementById"],"mappings":"gQAGqBA,E,4MAInBC,MAAQ,CACNC,KAAM,I,EAERC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,KAAME,EAAEE,OAAOC,S,EAEjCC,cAAgB,SAAAJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,O,uDAGvB,IACAA,EAASU,KAAKX,MAAdC,KACR,OACE,8BACE,wBAAQW,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaF,SAAUC,KAAKJ,cAA5C,UACE,wBAAQM,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEE,KAAK,OACLR,MAAOL,EACPW,UAAU,mBACVC,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUP,KAAKT,0B,GAjCUiB,aC0BxBC,E,4MArBbC,SAAW,SAAAlB,GAET,EAAKM,MAAMa,UAAU,EAAKb,MAAMc,eAChCC,QAAQC,IAAI,EAAKhB,MAAMc,gB,uDAGvB,OACE,mCACE,oBAAIX,UAAU,eAAec,QAASf,KAAKU,SAA3C,SACE,qBACEM,IAAI,GAEJC,IAAKjB,KAAKF,MAAMoB,aAChBjB,UAAU,0BAFLD,KAAKF,MAAMc,uB,GAfGJ,aCuBhBW,MAvBf,YAA4C,IAApBC,EAAmB,EAAnBA,KAAMT,EAAa,EAAbA,UAC5B,OACE,8BACE,oBAAIV,UAAU,eAAd,SACGmB,EAAKC,KAAI,SAAA7B,GACR,OACE,cAAC,EAAD,CAEE0B,aAAc1B,EAAE0B,aAChBP,UAAWA,EACXC,cAAepB,EAAEoB,eAHZpB,EAAE8B,Y,iCCRfC,EAAqB,SAACC,EAAOC,EAAMC,GACvC,OAAOC,IACJC,IADI,qCAE2BJ,EAF3B,iBAEyCC,EAFzC,gBAEqDC,EAFrD,yDAIJG,MAAK,SAAAC,GAAQ,OAAIA,EAASV,KAAKW,SAGpCR,EAAmBS,UAAY,CAC7BR,MAAOS,IAAUC,OAAOC,WACxBV,KAAMQ,IAAUG,OAAOD,WACvBT,OAAQO,IAAUC,OAAOC,YAGZ,MAAEZ,ECdF,SAASc,EAAT,GAAkC,IAAhBC,EAAe,EAAfA,YAC/B,OACE,mCACE,wBAAQpC,KAAK,SAASa,QAASuB,EAA/B,oB,qBCFeC,G,6KAEjB,OACE,cAAC,IAAD,CACErC,KAAK,OACLsC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,U,GARoBnC,cCDhBoC,E,4MAKnBC,MAAQ,SAAArD,GACS,WAAXA,EAAEsD,MAA2C,QAAtBtD,EAAEE,OAAOqD,UAClC,EAAKjD,MAAMkD,c,EAIfC,kBAAoB,WAClBC,OAAOC,iBAAiB,UAAW,EAAKN,OACxCK,OAAOC,iBAAiB,QAAS,EAAKN,Q,EAGxCO,qBAAuB,WACrBF,OAAOG,oBAAoB,UAAW,EAAKR,OAC3CK,OAAOG,oBAAoB,QAAS,EAAKR,Q,uDAIzC,OACE,qBAAK5C,UAAU,UAAf,SACE,qBAAKA,UAAU,QAAf,SACE,qBAAKgB,IAAKjB,KAAKF,MAAMc,cAAeI,IAAI,a,GAzBfR,aC0FpB8C,E,4MApFbjE,MAAQ,CACN+B,KAAM,GACNmC,SAAS,EACTC,MAAO,KACPhC,MAAO,GACPC,KAAM,EACNb,cAAe,KACfc,OAAQ,sC,EAWV+B,aAAe,SAAAC,GACb,EAAKjE,SAAS,CACZ2B,KAAM,KAER,EAAK3B,SAAS,CACZ+B,MAAOkC,K,EAGX/C,UAAY,SAAAC,GACV,EAAKnB,SAAS,CACZmB,cAAeA,K,EAGnBoC,WAAa,WACX,EAAKvD,UAAS,SAAAkE,GAAS,MAAK,CAAE/C,eAAgB+C,EAAU/C,mB,EAG1DgD,UAAY,WACV,EAAKnE,SAAS,CAAE8D,SAAS,IADT,MAEgB,EAAKlE,MAA7BmC,EAFQ,EAERA,MAAOC,EAFC,EAEDA,KAAMC,EAFL,EAEKA,OACrBmC,EAA8BrC,EAAOC,EAAMC,GAExCG,MAAK,SAAAT,GACJ,GAAIA,EAAK0C,OAAS,EAChB,EAAKrE,SAAS,CAAE+D,OAAO,QAClB,CACL,EAAK/D,UAAS,SAAAkE,GAAS,MAAK,CAC1BvC,KAAK,GAAD,mBAAMuC,EAAUvC,MAAhB,YAAyBA,IAC7BK,KAAMkC,EAAUlC,KAAO,EACvB+B,OAAO,MAJJ,MAM+BO,SAASC,gBAArCC,EANH,EAMGA,UAAWC,EANd,EAMcA,aACfzC,EAAO,GACTyB,OAAOiB,SAAS,CACdC,IAAKH,EAAYC,EAAe,IAChCG,SAAU,eAKjBC,OAAM,SAAAd,GAAK,OAAI,EAAK/D,SAAS,CAAE+D,aAC/Be,SAAQ,kBAAM,EAAK9E,SAAS,CAAE8D,SAAS,Q,iEAjDzBiB,EAAWb,GACVA,EAAUnC,QACVxB,KAAKX,MAAMmC,OAE3BxB,KAAK4D,c,+BAgDC,IAAD,EACyC5D,KAAKX,MAA7C+B,EADD,EACCA,KAAMmC,EADP,EACOA,QAASC,EADhB,EACgBA,MAAO5C,EADvB,EACuBA,cAC9B,OACE,gCACE,cAAC,EAAD,CAAWb,SAAUC,KAAKyD,eACzBD,GAAS,6DAETD,GAAW,cAAC,EAAD,IACZ,cAAC,EAAD,CAAcnC,KAAMA,EAAMT,UAAWX,KAAKW,YACzCS,EAAK0C,OAAS,GAAK,cAACzB,EAAD,CAAQC,YAAatC,KAAK4D,YAC7ChD,GACC,cAAC,EAAD,CACEb,SAAUC,KAAKW,UACfC,cAAeA,EACfoC,WAAYhD,KAAKgD,oB,GA7EXxC,a,MCHlBiE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFZ,SAASa,eAAe,W","file":"static/js/main.fe7c90b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    term: '',\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ term: e.target.value });\r\n  };\r\n  hendeleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  render() {\r\n    const { term } = this.state;\r\n    return (\r\n      <div>\r\n        <header className=\"Searchbar\">\r\n          <form className=\"SearchForm\" onSubmit={this.hendeleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              name=\"term\"\r\n              value={term}\r\n              className=\"SearchForm-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </form>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass ImageGalleryItem extends Component {\r\n\r\n  static propTypes = { onClick: PropTypes.func };\r\n\r\n  newModal = e => {\r\n    \r\n    this.props.openModal(this.props.largeImageURL);\r\n    console.log(this.props.largeImageURL);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <li className=\"ImageGallery\" onClick={this.newModal}>\r\n          <img\r\n            alt=\"\"\r\n            key={this.props.largeImageURL}\r\n            src={this.props.webformatURL}\r\n            className=\"ImageGalleryItem-image\"\r\n          />\r\n        </li>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem.js';\r\n\r\nfunction ImageGallery({ data, openModal }) {\r\n  return (\r\n    <div>\r\n      <ul className=\"ImageGallery\">\r\n        {data.map(e => {\r\n          return (\r\n            <ImageGalleryItem\r\n              key={e.id}\r\n              webformatURL={e.webformatURL}\r\n              openModal={openModal}\r\n              largeImageURL={e.largeImageURL}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nImageGallery.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FetchDataWithQuery = (query, page, APIkey) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${APIkey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nFetchDataWithQuery.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  APIkey: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default { FetchDataWithQuery };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ handleClick }) {\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={handleClick}>\r\n        more\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default class Loaders extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    modal: PropTypes.func,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n  };\r\n  modal = e => {\r\n    if (e.code === 'Escape' || e.target.nodeName !== 'IMG') {\r\n      this.props.modalClose();\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener('keydown', this.modal);\r\n    window.addEventListener('click', this.modal);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener('keydown', this.modal);\r\n    window.removeEventListener('click', this.modal);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar.js';\nimport ImageGallery from './components/ImageGallery/ImageGallery.js';\nimport AxiosQuery from './Shared/AxiosQuery.js';\nimport Button from './components/Button/Button.js';\nimport Loaders from './components/Loader/Loader.js';\nimport Modal from './components/Modal/Modal.js';\n\nclass App extends Component {\n  state = {\n    data: [],\n    loading: false,\n    error: null,\n    query: '',\n    page: 1,\n    largeImageURL: null,\n    APIkey: '18953459-ccf1cbce1be1015139c395560',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.query;\n    const nextQuery = this.state.query;\n    if (prevQuery !== nextQuery) {\n      this.fetchData();\n    }\n  }\n\n  hendleSearch = queryOn => {\n    this.setState({\n      data: [],\n    });\n    this.setState({\n      query: queryOn,\n    });\n  };\n  openModal = largeImageURL => {\n    this.setState({\n      largeImageURL: largeImageURL,\n    });\n  };\n  modalClose = () => {\n    this.setState(prevState => ({ largeImageURL: !prevState.largeImageURL }));\n  };\n\n  fetchData = () => {\n    this.setState({ loading: true });\n    const { query, page, APIkey } = this.state;\n    AxiosQuery.FetchDataWithQuery(query, page, APIkey)\n\n      .then(data => {\n        if (data.length < 1) {\n          this.setState({ error: true });\n        } else {\n          this.setState(prevState => ({\n            data: [...prevState.data, ...data],\n            page: prevState.page + 1,\n            error: false,\n          }));\n          const { scrollTop, clientHeight } = document.documentElement;\n          if (page > 1) {\n            window.scrollTo({\n              top: scrollTop + clientHeight - 160,\n              behavior: 'smooth',\n            });\n          }\n        }\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  render() {\n    const { data, loading, error, largeImageURL } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.hendleSearch} />\n        {error && <p>...The query value failed...</p>}\n\n        {loading && <Loaders />}\n        <ImageGallery data={data} openModal={this.openModal} />\n        {data.length > 0 && <Button handleClick={this.fetchData} />}\n        {largeImageURL && (\n          <Modal\n            onSubmit={this.openModal}\n            largeImageURL={largeImageURL}\n            modalClose={this.modalClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './basesStyles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}